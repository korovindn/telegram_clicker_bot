const { Telegram, Markup } = require('telegraf')
const db = require('../../../db')
const config = require('../../../config.json')
const bonus = require('../bonus')

const telegram = new Telegram(config.TOKEN)

const bonusHandler = async (ctx) => {
    try{
        const today = new Date().getDate()
        const user = await db.user.findOne({ id: ctx.from.id })

        if (user.lastBonus != today){
            let superTotal = 0
            const channels = await db.channel.find()
            for (let i=0; i<channels.length; i++){
                const member = await telegram.getChatMember(channels[i].link, ctx.from.id)
                if(!(user.channels.includes(channels[i].link)) && (member.status === 'left')){
                    superTotal = superTotal + 1
                }
            }
            if(user.videos>=10 && user.super>=superTotal){
                const bonusValue = bonus.calc() 
                await db.user.updateOne(
                    {id: ctx.from.id},
                    {
                        $set:{
                            money: user.money + bonusValue,
                            videos: 0,
                            super: 0,
                            lastBonus: today
                        }
                    }
                )
                await ctx.replyWithMarkdown(`üí∏ –ë–æ–Ω—É—Å –Ω–∞—á–∏—Å–ª–µ–Ω.\n–ë–∞–ª–∞–Ω—Å –Ω–∞ –≤—ã–≤–æ–¥ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ *${bonusValue} ‚ÇΩ*.\nüí∞–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: *${user.balance.toFixed(2)} ‚ÇΩ*\nüí¥ –î–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ –≤—ã–≤–æ–¥ : *${(user.money+bonusValue).toFixed(2)} ‚ÇΩ*`)
            } else {
                const options = []
                if(10 - user.videos > 0){
                    options.push([Markup.button.callback(`–û—Å—Ç–∞–ª–æ—Å—å –≤–∏–¥–µ–æ: ${10 - user.videos}`, '0')])
                }
                if(superTotal - user.super > 0){
                    options.push([Markup.button.callback(`–û—Å—Ç–∞–ª–æ—Å—å —Å—É–ø–µ—Ä–∑–∞–¥–∞–Ω–∏–π: ${superTotal - user.super}`, '1')])
                }
                ctx.reply('‚ùó–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å "–ë–æ–Ω—É—Å" –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å "–í–∏–¥–µ–æ" –º–∏–Ω–∏–º—É–º 10 —Ä–∞–∑ –∏ –≤—Å–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ "–°—É–ø–µ—Ä–∑–∞–¥–∞–Ω–∏—è"‚ùó', Markup.inlineKeyboard(options))
            }

        } else if(user.bonusesToday > 0) {
            if (user.videos>=15){
                const bonusValue = bonus.calc() 
                await db.user.updateOne(
                    {id: ctx.from.id},
                    {
                        $set: {
                            money: user.money + bonusValue,
                            videos: 0,
                            bonusesToday: user.bonusesToday - 1
                        }
                    }
                )
                ctx.replyWithMarkdown(`üí∏ –ë–æ–Ω—É—Å –Ω–∞—á–∏—Å–ª–µ–Ω.\n–ë–∞–ª–∞–Ω—Å –Ω–∞ –≤—ã–≤–æ–¥ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ *${bonusValue} ‚ÇΩ*.\nüí∞–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: *${user.balance.toFixed(2)} ‚ÇΩ*\nüí¥ –î–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ –≤—ã–≤–æ–¥ : *${(user.money+bonusValue).toFixed(2)} ‚ÇΩ*\n–û—Å—Ç–∞–ª–æ—Å—å –±–æ–Ω—É—Å–æ–≤ —Å–µ–≥–æ–¥–Ω—è: *${user.bonusesToday - 1}*`)
            } else {
                ctx.reply(`–î–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –±–æ–Ω—É—Å–∞ –æ—Å—Ç–∞–ª–æ—Å—å:`, Markup.inlineKeyboard([
                    Markup.button.callback(`${15-user.videos} –≤–∏–¥–µ–æ`, '0')
                ]))
            }
        } else {
            ctx.reply(`–°–µ–≥–æ–¥–Ω—è –≤—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –≤—Å–µ –±–æ–Ω—É—Å—ã‚ùó –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞`)
        }
    } catch (e){
        console.log(e)
    }
}

module.exports = bonusHandler